#!/bin/bash

### LXC Wrapper 2 Usage:help
#
# lx
#
#	Simply lists the containers using `lxc-ls --fancy`
#
# lx { create | start | stop | attach | destroy } CONTAINER OPTIONS ...
#
# 	Standard operations
#
# 	create : requires a [ -t TEMPLATE ] option
#
# 	Other options:
#
# 		-p,--privileged -- assume the user is privileged
#
# 			lx normally prepends the command with "sudo"
#
#			If you want lx to always assume the user is privileged, set the environment variable
#
#				export LXSUDO=no
#
# lx CONTAINER OPTIONS ...
#
# 	For operations that require running containers to be ready.
#	
#	--expose IFACE CPORT HPORT
#
#		Expose container's port CPORT on host's interface IFACE on port HPORT
#
###/doc

#%include autohelp.sh bashout.sh argstore.sh

SUDOCMD=sudo

if [[ -z "$*" ]]; then
	lxc-ls --fancy
	exit
fi

# =================
# Main argument extraction

validactions="$(cat <<'EOF'
create
attach
start
stop
destroy
snapshot
copy
EOF
)"

ACTION="$(args_get "$validactions" "$1")"

if [[ -n "$ACTION" ]]; then
	# first item was an action, pop stack
	shift
fi

CONTAINER="$1"; shift

# ===================
# Options extraction

alloptions="$(args_store "$@")"

EXPOSE="$(args_get "$allopts" "--expose" 3|tail -n +2)"

TYPE="$(args_get "$allopts" "(--type|-t)" 1 | tail -n 1)"

if [[ "${LXSUDO+x}" = nox ]] || [[ -n "$(args_get "$allopts" "(--privileged|-p)")" ]]; then
	SUDOCMD=
fi

case "$ACTION" in
	create)
		if [[ -z "$TYPE" ]]; then
			faile "Specify a type with [ -t TYPE ]"
		fi
		$SUDOCMD lxc-create -n "$CONTAINER" -t "$TYPE"
		;;
	attach)
		$SUDOCMD lxc-attach -n "$CONTAINER"
		;;
	start)
		$SUDOCMD lxc-start -n "$CONTAINER"
		;;
	stop)
		$SUDOCMD lxc-stop -n "$CONTAINER"
		;;
	destroy)
		$SUDOCMD lxc-destroy -n "$CONTAINER"
		;;
esac

#%include expose.sh

if [[ -n "$EXPOSE" ]]; then
	doexpose "$EXPOSE"
fi


