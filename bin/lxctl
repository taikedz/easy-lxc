#!/bin/bash

### Simple LXC controller Usage:help
#
# This is a simple wrapper script to better facilitate using lxc. It supports providing the container name alone (rather than
# having to insert -n when you forgot it), and implicitly filling in the container in simple situations; and automatically using
# sudo unless explicitly switched off.
#
#
#	[ SUDOCMD=[sudo] ] lxctl { create | destroy | start | stop } [ { CONTAINER | "." } [ OPTIONS ] ]
#
#	[ SUDOCMD=[sudo] ] lxctl ls OPTIONS
#
#	lxctl last [ CONTAINER ]
#
#
# Calls the appropriate LXC action on the specified container. If CONTAINER is not specified, lxctl will attempt to use the last
# explicitly specified container.
#
# You can call `lxctl last` to see the container, or provide a container name to set the container.
#
# You can use "." as the name of a container to specifically use the last-used container.
#
# The list of actions in the first example are a subset - the real subset is in fact any command in the lxc-* family.
#
# Environment variables:
#
#	SUDOCMD - if you explicitly set this to a nil string, the actions will not use sudo
#
# Special considerations
#
# -- Key Server
# 	To work around a bug when behind stringent firewalls, any "create -t download" operation is called using hkp://keyserver.ubuntu.com:80
# 	This is always active.
#
###/doc

LASTCONTAINERF=~/.config/lxctl_last

function printhelp {
	echo -e "\033[1;35m"
	sed "$(egrep -n '^.+Usage:' "$0"|cut -d':' -f1|head -n 1),$(grep -n '###/doc' "$0"|cut -d':' -f1|head -n 1) p" -n "$0"
	echo -e "\033[0m"
	exit
}

if [[ -z "$*" ]] || [[ "$*" = "--help" ]]; then
	printhelp
fi

function faile {
	echo -e "\033[31m$*\033[0m" >&2
	exit
}

ACTION="$1"; shift

if [[ "$*" =~ --help ]]; then
	man "lxc-$ACTION"
	exit
fi

if [[ -z "${SUDOCMD+x}" ]]; then
	#echo "Setting sudo"
	SUDOCMD=sudo
fi

# Set the indicator that says hey there are more options
DOXTRAS=
# Placeholder for added options
EXTRAOPTS=

# Process actions that do  not take containers
case "$ACTION" in
	ls)
		$SUDOCMD lxc-ls "$@"
		exit
		;;
	last)
		if [[ -z "$1" ]]; then
			cat "$LASTCONTAINERF"
		else
			echo "$1" > "$LASTCONTAINERF"
		fi
		exit
		;;
	create)
		if [[ "$*" =~ "-t download" ]]; then
			EXTRAOPTS="$EXTRAOPTS --keyserver hkp://keyserver.ubuntu.com:80"
		fi
		;;
esac

if ! which "lxc-$ACTION" 2>/dev/null >/dev/null ; then
	faile "No such action lxc-$ACTION"
fi


# Add our own DOXTRAS token if one does not already exist in the user's args
if [[ -n "$EXTRAOPTS" ]] && [[ ! "$*" =~ $(echo ' -- ') ]]; then
	DOXTRAS='--'
fi

CONTAINER="$1"; shift
if [[ -z "$CONTAINER" ]] || [[ "$CONTAINER" = '.' ]]; then
	CONTAINER=$(cat "$LASTCONTAINERF")
fi

(
	# Print out a copy of the call, for info
	set -x
	"$SUDOCMD" "lxc-$ACTION" -n "$CONTAINER" "$@" $DOXTRAS $EXTRAOPTS
)
RES=$?

if [[ "$RES" = 0 ]]; then
	echo "$CONTAINER" > "$LASTCONTAINERF"
fi

